---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  labels:
    app.kubernetes.io/name: shipping
    app.kubernetes.io/part-of: shipping
    app.kubernetes.io/component: web
    app: sock-shop
    runtime: jvm
  annotations:
    litmuschaos.io/chaos: "true"
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: shipping
      app.kubernetes.io/part-of: shipping
      app.kubernetes.io/component: web
      app: sock-shop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shipping
        app.kubernetes.io/part-of: shipping
        app.kubernetes.io/component: web
        app: sock-shop
    spec:
      containers:
      - name: shipping
        image: yuuki/sockshop-shipping:0.4.9
        env:
         - name: ZIPKIN
           value: zipkin.jaeger.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        #  - name: JAVA_TOOL_OPTIONS
        #    value: >-
        #         -XX:+UseContainerSupport
        #         -XX:MinRAMFraction=2
        #         -XX:MaxRAMFraction=2
        #         -Dcom.sun.management.jmxremote
        #         -Dcom.sun.management.jmxremote.port=5555
        #         -Dcom.sun.management.jmxremote.authenticate=false
        #         -Dcom.sun.management.jmxremote.ssl=false
         - name: JAVA_TOOL_OPTIONS
           value: >-
                -Dcom.sun.management.jmxremote
                -Dcom.sun.management.jmxremote.port=5555
                -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false
        resources:
          limits:
            cpu: 600m
            memory: 400Mi
          requests:
            cpu: 300m
            memory: 400Mi
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
        cloud.google.com/gke-nodepool: "default-pool"
